
## ----- Arcane aliases/functions section -----



# ---------------------------------------------------------------
# -------------------------- Aliases ----------------------------
# ---------------------------------------------------------------

alias gitarc='cd ${WORK_DIR}/arcane/framework'
alias gitqama='cd ${WORK_DIR}/arcane/arcane-benchs'



# ---------------------------------------------------------------
# ----------------------- Init functions ------------------------
# ---------------------------------------------------------------

initarc()
{
  ARCANE_TYPE_BUILD=${1}
  ARCANE_SOURCE_DIR=${WORK_DIR}/arcane/framework
  ARCANE_BUILD_DIR=${BUILD_DIR}/build_arcane/${ARCANE_TYPE_BUILD}
  ARCANE_INSTALL_PATH=${BUILD_DIR}/install_arcane/${ARCANE_TYPE_BUILD}

  mkdir -p ${ARCANE_BUILD_DIR}
  mkdir -p ${ARCANE_INSTALL_PATH}

  cd ${ARCANE_BUILD_DIR}
}

initarcfork()
{
  ARCANE_TYPE_BUILD=${1}
  ARCANE_SOURCE_DIR=${WORK_DIR}/arcane/forks/framework
  ARCANE_BUILD_DIR=${BUILD_DIR}/build_arcane_fork/${ARCANE_TYPE_BUILD}
  ARCANE_INSTALL_PATH=${BUILD_DIR}/install_arcane_fork/${ARCANE_TYPE_BUILD}

  mkdir -p ${ARCANE_BUILD_DIR}
  mkdir -p ${ARCANE_INSTALL_PATH}

  cd ${ARCANE_BUILD_DIR}
}

initqama()
{
  ARCANE_TYPE_BUILD=${1}
  ARCANE_INSTALL_PATH=${BUILD_DIR}/install_arcane/${ARCANE_TYPE_BUILD}

  QS_BUILD_TYPE=${1}
  QS_SOURCE_DIR=${WORK_DIR}/arcane/arcane-benchs/quicksilver
  QS_BUILD_DIR=${BUILD_DIR}/build_qama/${QS_BUILD_TYPE}
  QS_EXE=${QS_BUILD_DIR}/src/Quicksilver
  QS_ARC=${QS_SOURCE_DIR}/data/tests/ExampleFull.arc

  mkdir -p ${QS_BUILD_DIR}

  cd ${QS_BUILD_DIR}
}



# ---------------------------------------------------------------
# ---------------------- Config functions -----------------------
# ---------------------------------------------------------------

configarc()
{
  if [[ -v ARCANE_BUILD_DIR ]]
  then
    cmake \
      -S ${ARCANE_SOURCE_DIR} \
      -B ${ARCANE_BUILD_DIR} \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${ARCANE_INSTALL_PATH} \
      -DARCANE_BUILD_TYPE=${ARCANE_TYPE_BUILD}
  
    chmod u+x ${ARCANE_BUILD_DIR}/bin/*
  else
    echo "Lancer initarc avant"
    return 1
  fi
}

configarcgpu()
{
  if [[ -v ARCANE_BUILD_DIR ]]
  then
    cmake \
      -S ${ARCANE_SOURCE_DIR} \
      -B ${ARCANE_BUILD_DIR} \
      -GNinja \
      -DCMAKE_INSTALL_PREFIX=${ARCANE_INSTALL_PATH} \
      -DARCANE_BUILD_TYPE=${ARCANE_TYPE_BUILD} \
      -DARCANE_ACCELERATOR_MODE=CUDANVCC -DCMAKE_CUDA_COMPILER=nvcc

    chmod u+x ${ARCANE_BUILD_DIR}/bin/*
  else
    echo "Lancer initarc avant"
    return 1
  fi
}

configqama()
{
  if [[ -v QS_BUILD_DIR ]]
  then
    cmake \
      -S ${QS_SOURCE_DIR} \
      -B ${QS_BUILD_DIR} \
      -GNinja \
      -DCMAKE_PREFIX_PATH=${ARCANE_INSTALL_PATH} \
      -DCMAKE_BUILD_TYPE=${QS_BUILD_TYPE}
  else
    echo "Lancer initqama avant"
    return 1
  fi
}



# ---------------------------------------------------------------
# ------------------- Build/Install functions -------------------
# ---------------------------------------------------------------

biarc()
{
  if [[ -v ARCANE_BUILD_DIR ]]
  then
    chmod u+x ${ARCANE_BUILD_DIR}/bin/*
    cmake --build ${ARCANE_BUILD_DIR} --target install
  else
    echo "Lancer initarc avant"
    return 1
  fi
}

docarc()
{
  if [[ -v ARCANE_BUILD_DIR ]]
  then
    chmod u+x ${ARCANE_BUILD_DIR}/bin/*
    cmake --build ${ARCANE_BUILD_DIR} --target ${1}doc
  else
    echo "Lancer initarc avant"
    return 1
  fi
}
